import time
import json
import random
import paho.mqtt.client as mqtt

# Configuration for MQTT broker (change these to your settings)
MQTT_BROKER_HOST = "mqtt.example.com"
MQTT_BROKER_PORT = 1883
MQTT_USERNAME = "your_username"
MQTT_PASSWORD = "your_password"
MQTT_TOPIC = "restroom_data"

# Simulated sensor data (you should replace this with real sensor data)
def generate_sensor_data():
    occupancy = random.randint(0, 1)  # Simulate occupancy (0 for vacant, 1 for occupied)
    cleanliness = random.uniform(0, 1)  # Simulate cleanliness (0 to 1 scale)
    return {"occupancy": occupancy, "cleanliness": cleanliness}

# Callback when the MQTT client connects
def on_connect(client, userdata, flags, rc):
    print("Connected to MQTT broker with code %d" % rc)

# Main function to send sensor data
def send_sensor_data():
    client = mqtt.Client()
    client.on_connect = on_connect

    # Set credentials if the MQTT broker requires authentication
    if MQTT_USERNAME and MQTT_PASSWORD:
        client.username_pw_set(MQTT_USERNAME, MQTT_PASSWORD)

    try:
        client.connect(MQTT_BROKER_HOST, MQTT_BROKER_PORT, 60)
    except:
        print("Could not connect to the MQTT broker. Check your settings.")
        return

    while True:
        sensor_data = generate_sensor_data()
        payload = json.dumps(sensor_data)
        client.publish(MQTT_TOPIC, payload, qos=1)
        print(f"Published data: {payload}")
        time.sleep(5)  # Adjust the interval as needed

if __name__ == "__main__":
    send_sensor_data()
